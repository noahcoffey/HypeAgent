# Example environment variables
TIMEZONE=America/Indiana/Indianapolis
GITHUB_TOKEN=
GITHUB_REPOS=

# CLI state/publisher settings
PUBLISHER=fs
# Options:
#   fs (default) — writes markdown drafts to disk via @hypeagent/publisher-fs
#   gh-pages     — publishes directly to the gh-pages branch via GitHub API (no PRs)
#   none         — disables publishing (facts still pulled and state persisted)
STATE_FILE=.hypeagent/state.json
PUBLISH_OUT_DIR=updates
# Optional: base URL where updates are hosted to return public URLs
# PUBLISH_BASE_URL=https://example.com/updates

# Summary-only mode
# When true, skip publishing the full update and only publish the AI-generated summary.
# Also implicitly enables PUBLISH_AI_SUMMARY=true unless you override it explicitly.
# PUBLISH_ONLY_SUMMARY=true

# GitHub Pages publisher (PUBLISHER=gh-pages)
# Required when using gh-pages publisher; token can fall back to GITHUB_TOKEN
# GHPAGES_OWNER=your-github-username-or-org
# GHPAGES_REPO=your-repo
# GHPAGES_BRANCH=gh-pages
# GHPAGES_TOKEN=ghp_...

# AI summarization (optional)
# Provide an OpenAI API key to generate a concise social-media-ready summary
# of each update's content. If PUBLISH_AI_SUMMARY=true, a separate markdown
# file with the AI summary will be written alongside the main update.
# OPENAI_API_KEY=sk-...
# AI_SUMMARY_MODEL=gpt-4o-mini
# AI_SUMMARY_PROMPT=You are a helpful social media manager. Write a concise, upbeat project status update from the provided context. Target: 1-3 sentences. Be clear and specific. Avoid hashtags unless essential. Include key changes (commits, issues, PRs).
# PUBLISH_AI_SUMMARY=true
# Notes:
# - The AI response is expected to be strict minified JSON: {"title":"...","summary":"..."}
# - The CLI parses these fields; the summary is published without extra headers.

# AI context details (optional; enriches the model prompt with Issue/PR bodies, recent comments, and full commit messages)
# AI_INCLUDE_BODIES=true
# AI_MAX_COMMENTS=3
# AI_MAX_CONTEXT_CHARS=2000

# Integration tests (only run when set)
# TEST_GITHUB_REPO=owner/repo
